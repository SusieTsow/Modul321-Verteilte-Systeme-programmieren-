services:
  db:
    image: mysql:8.4.3
    ports:
      - "63306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_USER: example
      MYSQL_PASSWORD: example
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d # create a mount for the init script in docker-compose
      - mysql_data:/var/lib/mysql # create a mount for the data volumes for mysql in docker-compose
    networks:
      - m321-network
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    container_name: backend
    depends_on:
      - db
    networks:
      - m321-network
    environment:
      - DATABASE_HOST=db
      - DATABASE_USER=root
      - DATABASE_PASSWORD=example
      - DATABASE_NAME=chat
      - DATABASE_PORT=3306
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloakpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - keycloak_network
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloakpassword
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: adminpassword
    ports:
      - "8080:8080"
    command:
      - start-dev
    depends_on:
      - postgres
    networks:
      - keycloak_network
      - m321-network
  chat-service:
    build:
      context: ./chat-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    container_name: chat-service
    depends_on:
      - backend
    networks:
      - m321-network
    environment:
      - DATABASE_HOST=backend
      - DATABASE_PORT=3000
volumes:
  mysql_data:
  postgres_data:

networks:
  keycloak_network:
  m321-network:
